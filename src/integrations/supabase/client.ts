
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ippayvhpebkduzpfpbrc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlwcGF5dmhwZWJrZHV6cGZwYnJjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4MjEyNDksImV4cCI6MjA1NjM5NzI0OX0.-FlPTI6LziAAK10W2sUx3q6kPr9UhM-Q1j8SF2uucBg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    storage: localStorage,
    storageKey: 'budget-eagle-auth-token',
    flowType: 'implicit'
  },
  global: {
    headers: {
      'x-application-name': 'budget-eagle',
    },
    // Improved fetch with better error handling
    fetch: (url, options = {}) => {
      // Add cache busting for GET requests
      if (options?.method === 'GET' || !options?.method) {
        const separator = url.includes('?') ? '&' : '?';
        url = `${url}${separator}_nocache=${Date.now()}`;
      }
      
      // Add better logging
      console.log(`Supabase request: ${options?.method || 'GET'} ${url}`);
      
      return fetch(url, {
        ...options,
        credentials: 'same-origin'
      }).then(response => {
        if (!response.ok) {
          console.error(`Supabase error: ${response.status} ${response.statusText}`);
        }
        return response;
      }).catch(error => {
        console.error('Supabase fetch error:', error);
        throw error;
      });
    }
  },
  realtime: {
    // Enable realtime subscriptions
    params: {
      eventsPerSecond: 10
    }
  }
});
